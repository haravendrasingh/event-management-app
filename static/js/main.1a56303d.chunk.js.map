{"version":3,"sources":["components/EventList/EventList.module.scss","components/AddEvent/AddEvent.module.scss","components/AddEvent/AddEvent.js","components/EventList/EventList.js","components/EventList/EventListContainer.js","store/actions/eventActions.js","constants/actionTypes.js","App.js","serviceWorker.js","store/reducers/eventReducer.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","margin","spacing","AddEvent","props","initialValue","eventName","description","venue","price","discount","React","useState","formData","setFormData","submitState","setSumbitState","handleChange","event","target","id","value","Number","classes","className","s","addEvent","Dialog","fullWidth","open","onClose","handleCloseForm","aria-labelledby","DialogTitle","DialogContent","noValidate","autoComplete","TextField","error","required","label","onChange","helperText","type","DialogActions","Button","onClick","color","filterArr","EventList","anchorEl","setAnchorEl","selectedIndex","setSelectedIndex","setOpen","filteredList","events","filter","item","getFilteredList","eventList","Paper","flexCon","Tooltip","title","aria-controls","aria-haspopup","currentTarget","IconButton","aria-label","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","length","map","index","key","Menu","keepMounted","Boolean","MenuItem","selected","handleMenuItemClick","mapDispatchToProps","data","dispatch","payload","connect","state","eventReducer","App","window","location","hostname","match","initialState","rootReducer","combineReducers","console","log","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","next","action","result","getState","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.1a56303d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"eventList\":\"EventList_eventList__296pN\",\"flexCon\":\"EventList_flexCon__3pgEb\",\"noRecord\":\"EventList_noRecord__1tenf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addEvent\":\"AddEvent_addEvent__1xbGr\"};","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\n// import DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport s from './AddEvent.module.scss';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n        },\n    },\n}));\n\nexport default function AddEvent(props) {\n    const initialValue ={\n        eventName:'',\n        description:'',\n        venue: '',\n        price: '',\n        discount: ''\n    }\n    const [formData, setFormData] = React.useState(initialValue);\n    const [submitState, setSumbitState] = React.useState(false);\n\n    const handleChange =(event) => {\n        const {id, value}=event.target;\n        if(id === 'discount' && Number(value)<=100){\n            setFormData({ ...formData, [id]: value });\n        }else if(id !== 'discount'){\n            setFormData({ ...formData, [id]: value });\n        }\n      };\n    \n    const handleClear=()=>{\n        setSumbitState(false);\n        setFormData(initialValue)\n    }\n\n    const handleSubmit=()=>{\n        if(formData.eventName !== '' && formData.venue !== '' && formData.price !== '' ){\n            setSumbitState(false);\n            props.addEvent({...formData,price:Number(formData.price), discount:formData.discount?Number(formData.discount):0});\n            props.handleCloseForm();\n            setFormData(initialValue)\n        }else{\n            setSumbitState(true);\n        }\n    }\n    const handleCloseForm =()=>{\n        setSumbitState(false);\n        setFormData(initialValue)\n        props.handleCloseForm();\n    }\n    const classes = useStyles();\n    return (\n        <div className={s.addEvent}>\n            <Dialog fullWidth={true} open={props.open} onClose={handleCloseForm} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Add Event</DialogTitle>\n                <DialogContent>\n                    {/* <DialogContentText>\n              To subscribe to this website, please enter your email address here. We will send updates\n              occasionally.\n            </DialogContentText> */}\n                    <form className={classes.root} noValidate autoComplete=\"off\">\n                        <TextField\n                            error={submitState && !formData.eventName}\n                            required\n                            fullWidth\n                            id=\"eventName\"\n                            label=\"Event name\"\n                            value={formData.eventName}\n                            onChange={handleChange}\n                            helperText={submitState && !formData.eventName?\"Required\":''}\n                        />\n                        <TextField\n                            fullWidth\n                            id=\"description\"\n                            label=\"Description\"\n                            value={formData.description}\n                            onChange={handleChange}\n                        />\n                          <TextField\n                           error={submitState && !formData.venue}\n                            required\n                            fullWidth\n                            id=\"venue\"\n                            label=\"Venue\"\n                            value={formData.venue}\n                            onChange={handleChange}\n                            helperText={submitState && !formData.venue?\"Required\":''}\n                        />\n                        <TextField\n                         error={submitState && !formData.price}\n                            required\n                            fullWidth\n                            id=\"price\"\n                            label=\"Price\"\n                            type=\"number\"\n                            value={formData.price}\n                            onChange={handleChange}\n                            helperText={submitState && !formData.price?\"Required\":''}\n                        />\n                         <TextField\n                            fullWidth\n                            id=\"discount\"\n                            label=\"Discount\"\n                            type=\"number\"\n                            value={formData.discount}\n                            onChange={handleChange}               \n                        />\n                    </form>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClear} color=\"primary\">\n                        Clear\n            </Button>\n                    <Button onClick={handleSubmit} color=\"primary\">\n                        Submit\n            </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}","import React from 'react';\nimport s from './EventList.module.scss';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport AddIcon from '@material-ui/icons/Add';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AddEvent from '../AddEvent/AddEvent';\n\nconst filterArr = ['All', 'Free', 'Discount', 'No Discount']\n\nconst getFilteredList = (events, selectedIndex) => {\n    if (selectedIndex === 1) { // for Free\n        return events.filter((item) => item.price === 0 || item.discount === 100)\n    } else if (selectedIndex === 2) { // for Discount\n        return events.filter((item) => item.discount > 0)\n    } else if (selectedIndex === 3) { // for No Discount\n        return events.filter((item) => item.discount === 0)\n    }\n    else { //for All\n        return events;\n    }\n}\n\nconst EventList = (props) => {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [selectedIndex, setSelectedIndex] = React.useState(0);\n    const [open, setOpen] = React.useState(false);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = (event) => {\n        setAnchorEl(null);\n    };\n\n    const handleOpenForm = () => {\n        setOpen(true);\n    };\n\n    const handleCloseForm = () => {\n        setOpen(false);\n    };\n\n    const handleMenuItemClick = (event, index) => {\n        setSelectedIndex(index);\n        setAnchorEl(null);\n    };\n    const filteredList = getFilteredList(props.events, selectedIndex);\n    return (\n        <div className={s.eventList}>\n            <Paper>\n                <div className={s.flexCon}>\n                    <Tooltip title=\"Filter list\" aria-controls=\"filter-list\" aria-haspopup=\"true\" onClick={handleClick}>\n                        <IconButton aria-label=\"filter list\">\n                            <FilterListIcon />\n                        </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Add\" aria-controls=\"add\" aria-haspopup=\"true\" onClick={handleOpenForm}>\n                        <IconButton aria-label=\"Add\">\n                            <AddIcon />\n                        </IconButton>\n                    </Tooltip>\n                </div>\n                <TableContainer >\n                    <Table aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow >\n                                <TableCell>Event Name</TableCell>\n                                <TableCell>Description</TableCell>\n                                <TableCell>Venue</TableCell>\n                                <TableCell>Price(₹)</TableCell>\n                                <TableCell>Discount(%)</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {filteredList.length > 0 ? filteredList.map((item, index) => (\n                                <TableRow key={index}>\n                                    <TableCell>{item.eventName}</TableCell>\n                                    <TableCell>{item.description}</TableCell>\n                                    <TableCell>{item.venue}</TableCell>\n                                    <TableCell>{item.price}</TableCell>\n                                    <TableCell>{item.discount + '%'}</TableCell>\n                                </TableRow>\n                            )) :\n                            // <div className={s.noRecord}>{'No record present'}</div>\n                            <TableRow >\n                                    <TableCell>{'No record present'}</TableCell>\n                            </TableRow>\n                            }\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Paper>\n\n            <Menu\n                id=\"filter-list\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                {filterArr.map((item, index) => (\n                    <MenuItem\n                        key={item}\n                        selected={index === selectedIndex}\n                        onClick={(event) => handleMenuItemClick(event, index)}\n                    >\n                        {item}\n                    </MenuItem>\n                ))}\n            </Menu>\n            <AddEvent\n                {...props}\n                open={open}\n                handleCloseForm={handleCloseForm}\n            />\n        </div>\n    );\n}\n\nexport default EventList;","import { connect } from 'react-redux';\nimport EventList from './EventList';\nimport {addEvent} from '../../store/actions/eventActions';\n\nconst mapStateToProps = state => ({\n        ...state.eventReducer\n});\n\nconst mapDispatchToProps={\n    addEvent\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EventList);","import * as actionTypes from '../../constants/actionTypes';\n\n\nexport const addEvent = (data) => (dispatch) => {\n    dispatch({\n        type: actionTypes.ADD_EVENT,\n        payload: data\n    })\n}","export const ADD_EVENT = 'ADD_EVENT';\n","import React from 'react';\nimport EventList from './components/EventList/EventListContainer';\n\nfunction App() {\n  return (\n    <EventList/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../../constants/actionTypes';\n\nconst initialState = {\n    events: [\n        {\n            eventName:'Webinar',\n            description:'this Webinar is conducted by me',\n            venue: 'agra',\n            price: 1100,\n            discount: 20\n        }\n    ]\n}\n\nexport default function (state = initialState, { type, payload }) {\n    switch (type) {\n        case actionTypes.ADD_EVENT:{\n            console.log(\"payload====\", payload)\n            return {\n                ...state,\n                events: [...state.events, payload]\n            }\n        }\n        default:\n            return state\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'fontsource-roboto/400.css';\nimport \"fontsource-roboto/500.css\";\nimport \"fontsource-roboto/300.css\";\nimport \"fontsource-roboto/700.css\";\nimport \"fontsource-roboto/900.css\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport eventReducer from './store/reducers/eventReducer';\n\nconst logger = store => {\n  return next => {\n    return action => {\n      console.log('[Middleware] Dispatching', action);\n      const result = next(action);\n      console.log('[Middleware] next state', store.getState());\n      return result;\n    }\n  }\n};\n\nconst rootReducer = combineReducers({\n  eventReducer: eventReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(logger, thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}